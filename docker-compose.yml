volumes:
  grafana_data:
  mongo_data:

networks:
  tr4pnode_net:
  cowrie_net:

services:
  mongo:
    image: mongo:6
    container_name: tr4pnode-mongo
    restart: unless-stopped
    volumes:
      - mongo_data:/data/db
    networks:
      - cowrie_net
      - tr4pnode_net

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: tr4pnode-backend
    environment:
      - MONGO_URI=mongodb://mongo:27017
    restart: unless-stopped
    networks:
      - tr4pnode_net
    depends_on:
      - mongo

  honeypot:
    image: cowrie/cowrie
    container_name: tr4pnode-honeypot
    restart: unless-stopped
    ports:
      - "22:2222"
    environment:
      - COWRIE_TELNET_ENABLED=no
      - COWRIE_SSH_ENABLED=yes
    volumes:
      - ./cowrie/cowrie.cfg:/cowrie/cowrie-git/etc/cowrie.cfg
      - ./cowrie/userdb.txt:/cowrie/cowrie-git/etc/userdb.txt
    networks:
      - cowrie_net
    depends_on:
      - mongo

  grafana:
    image: grafana/grafana:latest
    container_name: tr4pnode-grafana
    restart: unless-stopped
    ports:
      - "3001:3000"
    environment:
      - GF_INSTALL_PLUGINS=yesoreyeram-infinity-datasource
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/dashboards.yml:/etc/grafana/provisioning/dashboards/dashboards.yml
      - ./grafana/provisioning/datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml
      - ./grafana/dashboards:/etc/grafana/dashboards
    networks:
      - tr4pnode_net
    depends_on:
      - backend
      - mongo

  frontend:
    container_name: tr4pnode-frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    networks:
      - tr4pnode_net
    ports:
      - "3000:80"
    volumes:
      - ./frontend/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - backend
      - mongo
